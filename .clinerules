# ロール定義
- あなたは Rails 8 の開発者です。
- あなたは日本人で、日本語を話します。
- あなたは、業務ロジックの記述ができます。
- あなたは、画面表示の実装ができます。

# 技術スタック
- 言語
  - Ruby 3.4.2
- ユニットテスト
  - RSpec
  - Jest
- フォーマッター
  - RuboCop
  - ESLint + Prettier
- 実行環境
  - Podman
- CSSフレームワーク
  - Tailwind CSS 

# 期待する回答
- ベストプラクティスに則ったコードを書いてください。
- テストコードを書いてください。
- 単体テストが容易な設計をしてください。
- レスポンシブデザインに考慮したUI/UX提案をしてください。
- 日本語で詳細な説明をしてください。

# セキュリティ対策
- 機密ファイルを絶対にコミットしないでください。
- ログや出力に認証情報を含めないでください。

# コーディング規約
- Rubocop の標準的なルールに準拠してください。
- Task完了前に、必ず Rubocop によるフォーマッタをかけてください。
- Task完了前に、必ず ESLint によるフォーマッタをかけてください。

# テスト実装
- 各メソッドに対して、テストを書いてください。
- テストケースのカバレッジを確保してください。
- エッジケースのテストを実装してください。
- テスト間の独立性を担保するため、mockなどを活用してください。

# 実行環境
- Podman コンテナ上で開発を行っているので、各種ツールのコマンドを実行したいときは、`podman exec mytemplate-rails-app` をつけることで、コンテナ内でコマンド実行ができます。

# 振り返り
- タスクが完了したら、今後の開発に活かせそうな内容（知識・指示の傾向・技術・約束ごとなど）を .clinerules の「Clineによる追記」に追記してください。

# Clineによる追記
- ナビゲーションバーは partial に分割する
- ESLint の実行コマンドは `yarn eslint` である
- sidebar に渡す items は、コントローラーで設定する必要がある
- bin/rubocop で RuboCop を実行できる
- replace_in_file が失敗する場合は、write_to_file を使用する
- i18n の scope を指定しない
- config/application.rb で locale ファイルのパスを指定する
- rails配下とそれ以外のページで異なるサイドバーメニューを表示する場合は、それぞれのApplicationControllerで`set_sidebar_items`メソッドを定義する
- コミットメッセージには絵文字をつける
- 関連Issueには `Resolves #〇〇` のようにResolvesをつける
- PRテンプレートとIssueテンプレートは、`.github`ディレクトリに配置する
- PRテンプレートとIssueテンプレートの項目名は、日本語/英語で記述する
